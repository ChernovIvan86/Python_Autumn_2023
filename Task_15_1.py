### Task_15_1
'''
Создайте рекурсивную функцию, которая получает словарь как аргумент,
который может включать словари, которые могут включать словари и т.д.
и как аргумент значение ключа.
Например:
dct = {1:{1:{1:111}}}
x = 1
{1: {1: 111}}
{1: 111}
111
'''
# list.extend(iterable) добавляет новые элементы в конец списка,
    # но, в отличие от append(), принимает в качестве параметров итерируемые объекты:
    # списки, кортежи и строки
# dict.items() возвращает объект представления,
    # который отображает список пар кортежей словаря (ключ, значение).

#dct = {1:1, 2:2, 3:{2:22, 3:{0:1111, 1:2222, 4:{1:3333}}}, 1:11,}
dct = {1:{1:{1:111}}}
#print(dct)
def dct_ext(dct, x):
    lst = []
    for k, v in dct.items():
        if k == x:
            lst.append(v)
        if type(v) == dict:
            s = dct_ext(v, x)
            lst.extend(s)
    return lst

print(*dct_ext(dct, 1), sep='\n')



